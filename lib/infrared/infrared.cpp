#include "infrared.h"



int AD_sta = AC_STA_OFF;
// 红外内码写入

// 01 开
// byte group_on[] = {0xF5,0x08,0xAD,0x04,0x53,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x57,0x3C,0x53,0xCF,0x01,0x54,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x57,0x3C,0x57,0x3C,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x30,0x53,0x40,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0xD0,0x01,0x53,0x40,0x53,0x40,0x53,0xD0,0x01,0x52,0x40,0x4E,0xE2,0x13,0x48,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x58,0x3B,0x58,0x3B,0x58,0x3A,0x58,0x3A,0x59,0x3A,0x59,0xCA,0x01,0x59,0x39,0x5A,0x39,0x59,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x38,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0xA7,0x27,0xF2,0x08,0xB0,0x04,0x53,0xCF,0x01,0x53,0x3F,0x53,0x30,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC8,0x01,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5A,0x38,0x5A,0xD6,0x13,0x53,0x38,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x5A,0x39,0x59,0x39,0x59,0x39,0x5A,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0x39,0x59,0xC9,0x01,0x52,0xD0,0x01,0x59};
byte group_on[] = {0xF5,0x08,0xAE,0x04,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3C,0x56,0xCC,0x01,0x56,0xCC,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3C,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3C,0x56,0xCD,0x01,0x56,0x3D,0x56,0xDA,0x13,0x4F,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xAF,0x27,0xF6,0x08,0xAE,0x04,0x56,0xCC,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0xDD,0x13,0x4F,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56};

// 02 关
byte group_off[] = {0xF6,0x08,0xAC,0x04,0x58,0xCB,0x01,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0xCB,0x01,0x58,0x3B,0x58,0x3B,0x58,0xCB,0x01,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x57,0x3B,0x58,0x3B,0x57,0xCB,0x01,0x57,0x3B,0x57,0x3B,0x57,0x3B,0x57,0x3B,0x57,0x3B,0x57,0x3B,0x57,0xCC,0x01,0x57,0x3B,0x57,0xCB,0x01,0x57,0x3B,0x57,0x3B,0x57,0xCC,0x01,0x54,0x3F,0x54,0xDD,0x13,0x4C,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0xD0,0x01,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x52,0x40,0x53,0x40,0x52,0x40,0x52,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x52,0xD0,0x01,0x52,0xD0,0x01,0x52,0x40,0x53,0xAD,0x27,0xED,0x08,0xB5,0x04,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x52,0x40,0x4E,0x44,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x4E,0x44,0x52,0x40,0x4E,0x44,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0xD0,0x01,0x4E,0xD4,0x01,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0xDC,0x13,0x47,0x44,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x53,0x40,0x53,0x40,0x52,0x40,0x52,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x52,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0xD0,0x01,0x53,0x40,0x53};

// 03 制冷 
// 0xF2,0x08,0xB0,0x04,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xCF,0x01,0x54,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x54,0xDE,0x13,0x4D,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x53,0x3F,0x53,0xCF,0x01,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0xA8,0x27,0xFA,0x08,0xA9,0x04,0x53,0xCF,0x01,0x53,0x3F,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x37,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x37,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0x37,0x5B,0x37,0x5B,0xC8,0x01,0x5B,0x37,0x5B,0xD6,0x13,0x4D,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC7,0x01,0x5B
// FB 08 A7 04 5D C6 01 5D 35 5D 36 5D C6 01 5C 36 5C 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D C6 01 5C 36 53 3F 53 CF 01 53 3F 53 DE 13 4D 3F 53 3F 53 3F 53 30 53 3F 53 3F 53 3F 53 3F 5B 38 53 3F 53 3F 5B 38 5B 38 5B C8 01 5B 37 5B 38 5B 37 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 37 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B C7 01 5B C8 01 5B A7 27 FB 08 A7 04 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5C 37 5C 37 53 3F 53 3F 53 3F 53 3F 53 3F 54 3F 53 CF 01 54 3F 54 3F 53 3F 5B 38 5B 38 5B 38 5B C8 01 5B C8 01 5B C8 01 5B 38 5B 38 5A C9 01 5A 38 5A D8 13 52 3A 4E 45 4E 45 4E 45 4E 45 4E 45 4E 45 4E 45 4E 44 4E 45 4E 45 4E 45 4E 45 4E 45 4E 45 4E 44 4E 44 4E 45 4E 45 4E 45 4E 45 4E 45 4E 45 4E 44 4E 44 4E 45 4E 45 4E 44 4E 45 4E 44 4E D5 01 4E D4 01 4E 
//F1 08 B1 04 53 D0 01 53 40 53 40 53 D0 01 53 40 53 40 53 40 53 40 5B C8 01 5B 38 53 40 5B C8 01 53 40 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B 38 5B C8 01 5B 38 5B 38 5B C8 01 5B 38 5B D6 13 4F 3D 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B C7 01 5B C7 01 5B A9 27 F3 08 B0 04 53 CF 01 53 3F 53 3F 53 CF 01 53 3F 53 3F 53 3F 53 3F 53 CF 01 53 3F 53 3F 53 D0 01 53 3F 53 40 53 3F 53 3F 53 3F 53 40 5B 38 5B 38 5B 38 5B C8 01 5B 37 5B 38 5B 37 5B 38 5B 38 5B 38 5B C8 01 5B C8 01 5B C8 01 5B 37 5B 37 5B C8 01 5B 38 5B D7 13 54 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B C8 01 5B 

// FB 08 A6 04 5D C5 01 5D 35 5D 35 5D C6 01 5D 35 5D 35 5D 36 5D 35 5D C5 01 5D 35 5D 35 5D C6 01 5D 35 5D 36 5D 36 5D 36 5D 35 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 35 5D 36 5D 35 5D 36 5D 36 5D 36 5D C6 01 5D 35 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5D D5 13 56 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D 36 5D C6 01 5C C6 01 5C C6 01 5C AE 27 F5 08 A7 04 5D C6 01 5D 36 5D 36 5F C4 01 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D 36 60 33 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D 36 5C 37 5C 37 5C 37 5C C6 01 5C C6 01 5C C6 01 5C 36 5C 36 5C C7 01 5C 36 5C D4 13 56 36 5D 36 5C 37 5C 36 5C 36 5C 36 5C 36 5C 36 5C 36 53 40 53 40 53 40 53 40 53 40 53 40 53 40 53 3F 53 40 53 40 53 40 53 40 53 40 53 40 53 40 53 3F 53 40 53 40 53 40 53 40 53 40 53 CF 01 53 CF 01 53 
// FB 08 A6 04 5D C6 01 5D 35 5D 35 5D C6 01 5D 35 5D 36 5D 36 5D 36 5D C5 01 5D 35 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 53 3F 5D 36 5C 36 5C 36 5C 36 53 CF 01 5D 36 5D 36 53 3F 53 3F 53 3F 53 3F 53 CF 01 53 3F 53 CF 01 5C 36 53 3F 53 CF 01 53 3F 53 DD 13 56 36 5D 36 5C 36 5D 36 5C 36 5C 38 52 3F 53 3F 5C 36 53 3F 53 3F 53 3F 53 3F 53 CF 01 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 CF 01 53 CF 01 53 CF 01 53 AF 27 FC 08 A7 04 5D C5 01 5D 35 5D 36 5D C6 01 5D 36 5D 36 5D 36 5D 36 5D C6 01 5D 36 5D 36 5D C6 01 5D 36 5D 36 5C 36 5C 36 5C 36 5C 36 5C 37 53 3F 5C 36 5C C7 01 5C 36 5C 37 53 3F 53 40 53 40 53 3F 5C C7 01 53 CF 01 5C C6 01 5C 36 5C 36 5C C7 01 5C 36 5C D5 13 56 36 5D 36 5D 36 5C 37 53 3F 53 30 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 3F 53 CF 01 53 CF 01 53 
// FA 08 A8 04 53 CF 01 5C 36 53 3F 5C C7 01 53 3F 5C 37 53 3F 53 3F 53 CF 01 53 3F 53 3F 53 D0 01 53 3F 53 40 53 40 53 40 53 3F 53 40 53 40 53 3F 53 3F 53 CF 01 53 3F 53 3F 53 3F 53 40 53 40 53 3F 53 CF 01 53 3F 53 CF 01 53 3F 53 3F 53 CF 01 53 3F 53 DE 13 4C 3F 53 3F 53 3F 53 3F 53 40 53 40 53 3F 53 3F 53 3F 53 3F 53 40 53 40 53 3F 53 D0 01 53 3F 53 3F 53 3F 53 40 5B 38 53 3F 53 40 5B 38 53 40 5B 38 53 3F 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B C7 01 5B C7 01 5B A9 27 F2 08 B0 04 53 CF 01 53 3F 53 3F 53 D0 01 53 3F 53 40 53 40 53 3F 53 D1 01 51 3F 53 3F 53 D0 01 53 3F 53 40 53 40 53 40 5B 38 53 3F 53 40 53 30 5B 38 5B C8 01 5B 37 5B 38 5B 37 5B 38 5B 38 5B 38 5B C8 01 5B C7 01 5B C7 01 5B 37 5B 37 5B C8 01 5B 37 5B D5 13 4D 3F 53 3F 53 3F 53 3F 53 3F 5B 38 5B 38 5B 38 5B 37 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 37 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 38 5B 37 5B 38 5B 38 5B 38 5B 38 5B 38 5B C8 01 5B C7 01 5B 
// F6 08 AC 04 58 CB 01 58 3A 58 3A 58 CB 01 58 3A 59 3A 59 3A 59 3A 59 CA 01 5A 38 59 3A 59 CA 01 5A 38 5A 38 5A 39 5A 38 5A 38 5A 38 5A 39 5A 38 5A 38 5A C9 01 5A 38 5A 38 5A 38 5A 39 5A 39 5A 38 5A C9 01 5A 38 5A C9 01 5A 38 5A 38 5A C9 01 5A 38 5A D8 13 54 38 5A 38 5A 38 5A 38 5A 39 5A 38 5A 39 5A 38 5A 38 5A 39 5A 39 5A 39 5A 38 5A C9 01 5A 38 5A 39 5A 38 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 38 5A 39 5A 39 5A 39 5A 39 5A C9 01 5A C8 01 5A C9 01 5A AB 27 F8 08 AA 04 5A C8 01 5A 38 5A 39 5A C9 01 5A 38 5A 39 5A 39 5A 39 5A C9 01 5A 38 5A 39 5A C9 01 5A 38 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A C9 01 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A C9 01 5A C9 01 5A C9 01 5A 39 5A 39 5A C9 01 5A 39 5A D8 13 53 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A 39 5A C9 01 5A C9 01 5A 
// F4 08 AE 04 56 CD 01 56 3C 56 3D 56 CD 01 56 3D 55 3D 56 36 5D 3D 55 CC 01 56 3D 55 3D 55 CD 01 56 3C 56 3D 56 3D 55 3D 56 3D 56 3E 55 3D 56 3D 56 3D 56 CD 01 56 3D 56 3D 55 3D 56 3D 56 3D 56 3D 56 CD 01 56 3D 56 CD 01 56 3D 56 3C 56 CD 01 56 3D 56 DB 13 4C 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 41 52 40 52 40 52 D0 01 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 D1 01 52 D0 01 52 D0 01 52 B1 27 F2 08 B1 04 52 D0 01 52 40 52 40 52 D1 01 52 40 52 41 52 41 52 40 52 D0 01 52 40 52 40 52 D1 01 52 40 52 41 52 40 52 41 52 40 52 41 52 40 52 41 52 40 52 D1 01 52 40 52 40 52 41 52 40 52 40 52 40 52 D0 01 52 D0 01 52 D0 01 52 40 52 40 52 D1 01 52 40 52 DF 13 4B 40 52 40 52 41 52 40 52 40 52 40 52 40 52 40 52 40 52 40 52 41 52 41 52 40 52 40 52 40 56 3D 52 40 56 3D 56 3D 56 3D 56 3D 56 3D 56 3D 56 3D 55 3D 56 3D 56 3D 56 3D 56 3D 56 3D 56 CD 01 56 CD 01 56 
byte group_cool[] = {0xF1,0x08,0xB1,0x04,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x40,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x53,0xD0,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5A,0x38,0x5A,0x38,0x5A,0x38,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0xD7,0x13,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC7,0x01,0x5B,0xC8,0x01,0x5B,0xA7,0x27,0xF3,0x08,0xB2,0x04,0x52,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xDF,0x13,0x4C,0x30,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x40,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x30,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x37,0x5B,0x37,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B};

// 04 制热
byte group_warm[] = {0xF1,0x08,0xB1,0x04,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x40,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x53,0xD0,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5A,0x38,0x5A,0x38,0x5A,0x38,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0x38,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0xD7,0x13,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC7,0x01,0x5B,0xC8,0x01,0x5B,0xA7,0x27,0xF3,0x08,0xB2,0x04,0x52,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xDF,0x13,0x4C,0x30,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x40,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x30,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x37,0x5B,0x37,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B};

// 05 送风
byte group_wind[] = {0xF3,0x08,0xAD,0x04,0x56,0xC5,0x01,0x5D,0xCC,0x01,0x56,0x3C,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x55,0x3D,0x56,0x36,0x5D,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0xDC,0x13,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3E,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3E,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x55,0xAD,0x27,0xF4,0x08,0xAE,0x04,0x56,0xCD,0x01,0x55,0xCC,0x01,0x56,0x3C,0x56,0xCD,0x01,0x56,0x3C,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x55,0xCC,0x01,0x56,0x3D,0x55,0x3D,0x55,0xCD,0x01,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0x3D,0x55,0x3E,0x55,0x3D,0x55,0x3E,0x55,0x3D,0x56,0x3D,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0xCD,0x01,0x56,0x3D,0x55,0x3D,0x56,0xCE,0x01,0x55,0x3D,0x55,0xDC,0x13,0x4F,0x3D,0x56,0x3D,0x56,0x3E,0x55,0x3D,0x56,0x3E,0x55,0x3D,0x56,0x3D,0x56,0x3E,0x55,0x3D,0x56,0x3D,0x56,0x36,0x5D,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3D,0x56,0x3E,0x55,0x3D,0x55,0x3D,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x55,0x3D,0x55,0x3E,0x55,0x3D,0x55,0x3D,0x55,0x3D,0x55,0x3E,0x55,0x3D,0x55,0x3D,0x55,0xCD,0x01,0x55,0xCD,0x01,0x55,0xCD,0x01,0x55};

// 06 除湿（辅热）
byte group_dehumid[] = {0xFB,0x08,0xA7,0x04,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0xC5,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC5,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xD5,0x13,0x56,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0x36,0x5C,0xC7,0x01,0x5C,0x36,0x5C,0x37,0x53,0x40,0x5C,0xAD,0x27,0xF4,0x08,0xA7,0x04,0x5D,0x35,0x5D,0x36,0x5D,0xCD,0x01,0x55,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xCD,0x01,0x55,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xCE,0x01,0x55,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5C,0xCD,0x01,0x55,0xCD,0x01,0x55,0x3D,0x55,0x3D,0x55,0xC6,0x01,0x5C,0x36,0x5C,0xDC,0x13,0x4E,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0xC7,0x01,0x5C,0xC7,0x01,0x5C,0xC7,0x01,0x5C,0xC6,0x01,0x5C};

// 07 温度+
byte group_temp_up[] = {0xEC,0x08,0xB5,0x04,0x58,0x3B,0x58,0x3A,0x58,0xCB,0x01,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x58,0x3A,0x4E,0x45,0x4E,0x44,0x4E,0xD5,0x01,0x58,0x3A,0x58,0xCB,0x01,0x4E,0x44,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x58,0xCB,0x01,0x58,0x3A,0x58,0x3B,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x58,0x3B,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0xD5,0x01,0x58,0x3B,0x4E,0x44,0x58,0xCA,0x01,0x58,0x3A,0x58,0xD9,0x13,0x52,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x58,0x3A,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x4E,0xD5,0x01,0x58,0x3A,0x4E,0x45,0x58,0x3A,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xB3,0x27,0xEC,0x08,0xB5,0x04,0x58,0x3A,0x58,0x3B,0x58,0xCB,0x01,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x58,0x3A,0x58,0x3B,0x58,0x3A,0x58,0xCA,0x01,0x4E,0x44,0x58,0xCB,0x01,0x58,0x3B,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x59,0x3A,0x4E,0x44,0x58,0x3A,0x59,0x3A,0x58,0x3A,0x59,0xCA,0x01,0x59,0x39,0x59,0x3A,0x59,0x39,0x59,0x3A,0x5A,0x39,0x59,0x39,0x5A,0xC9,0x01,0x5A,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0x38,0x5A,0x38,0x5A,0xC9,0x01,0x5A,0x38,0x5A,0xD6,0x13,0x54,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B};

// 08 温度-
byte group_temp_down[] = {0xED,0x08,0xB5,0x04,0x58,0x3B,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x58,0x3A,0x4E,0x45,0x4E,0x44,0x58,0x3B,0x58,0xCB,0x01,0x58,0x3A,0x58,0x3A,0x58,0xCA,0x01,0x58,0x3B,0x59,0x3A,0x58,0x3A,0x59,0x3A,0x4E,0x44,0x58,0x3A,0x4E,0x45,0x58,0x3B,0x4E,0x44,0x58,0xCB,0x01,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x59,0xCA,0x01,0x58,0x3A,0x58,0xCB,0x01,0x58,0x3A,0x58,0x3A,0x58,0xCB,0x01,0x58,0x3A,0x58,0xD8,0x13,0x51,0x3A,0x58,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x58,0x3A,0x58,0x3B,0x58,0x3A,0x58,0x3B,0x58,0x3A,0x58,0xCB,0x01,0x58,0x3A,0x59,0x3A,0x58,0x3A,0x58,0x3B,0x58,0x3B,0x4E,0x44,0x58,0x3B,0x58,0x3B,0x4E,0x45,0x58,0x3B,0x58,0x3A,0x58,0x3A,0x4E,0x45,0x58,0x3B,0x58,0xCB,0x01,0x58,0x3A,0x58,0x3B,0x58,0x3B,0x58,0xA8,0x27,0xED,0x08,0xB5,0x04,0x58,0x3A,0x58,0x3A,0x58,0xCB,0x01,0x4E,0xD4,0x01,0x58,0x3A,0x59,0x3A,0x58,0x3B,0x58,0x3B,0x58,0xCA,0x01,0x59,0x3A,0x58,0x3A,0x59,0xCA,0x01,0x58,0x3A,0x58,0x3B,0x59,0x3A,0x59,0x3A,0x58,0x3A,0x4E,0x45,0x59,0x3A,0x58,0x3A,0x59,0x3A,0x58,0xCA,0x01,0x58,0x3A,0x58,0x3A,0x4E,0x44,0x58,0x3A,0x58,0x3B,0x58,0x3B,0x58,0xCA,0x01,0x58,0xCA,0x01,0x59,0xCA,0x01,0x58,0x3A,0x58,0x3A,0x58,0xCB,0x01,0x4E,0x44,0x58,0xD9,0x13,0x52,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x4E,0x45,0x58,0x3B,0x58,0x3A,0x58,0x3A,0x4E,0x44,0x58,0x3B,0x58,0x3A,0x58,0x3B,0x4E,0x45,0x58,0x3B,0x58,0x3A,0x58,0x3B,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x58,0x3B,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E};

// 09 辅热
byte group_auxheat[] = {0xF4,0x08,0xAF,0x04,0x54,0x3D,0x56,0x36,0x5D,0xC5,0x01,0x5D,0xC5,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC5,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x3D,0x56,0x36,0x5D,0x35,0x5D,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x3D,0x56,0xC6,0x01,0x5D,0x35,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x35,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xD4,0x13,0x56,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0xC7,0x01,0x5C,0x37,0x53,0x40,0x53,0x3F,0x53,0xB1,0x27,0xFC,0x08,0xA7,0x04,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5C,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5C,0x36,0x5C,0x36,0x5D,0x36,0x53,0x3F,0x5C,0x36,0x5C,0x37,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0x30,0x53,0x3F,0x53,0x30,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0xDE,0x13,0x56,0x36,0x5C,0x37,0x5C,0x36,0x53,0x30,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x36,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0xC0,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53};

// 10 上下扫风
// 开
// 关 
byte group_updown_on[] = {0xF4,0x08,0xA7,0x04,0x5D,0xC5,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xCD,0x01,0x56,0x35,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xD1,0x13,0x56,0xCD,0x01,0x55,0x36,0x5D,0x3D,0x55,0x36,0x5D,0x3D,0x55,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x3D,0x55,0x3D,0x55,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x3D,0x55,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x3D,0x55,0x3E,0x55,0x36,0x5D,0x3E,0x55,0x36,0x5D,0x36,0x5D,0x3E,0x55,0x36,0x5D,0x40,0x53,0xCE,0x01,0x55,0xCD,0x01,0x55,0xCD,0x01,0x55,0xA9,0x27,0xF2,0x08,0xB0,0x04,0x5C,0xC6,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x54,0xCF,0x01,0x54,0xCF,0x01,0x54,0x3F,0x54,0x3F,0x54,0xD0,0x01,0x53,0x3F,0x53,0xE0,0x13,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B};
byte group_updown_off[] = {0xFB,0x08,0xA7,0x04,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x35,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0xD5,0x13,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0xC6,0x01,0x5C,0xC6,0x01,0x5C,0xC6,0x01,0x5C,0xA5,0x27,0xFB,0x08,0xA7,0x04,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5C,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x3E,0x55,0x36,0x5D,0xC6,0x01,0x5C,0xCD,0x01,0x55,0xC6,0x01,0x5C,0x36,0x5C,0x36,0x5C,0xC6,0x01,0x5C,0x3E,0x55,0xDC,0x13,0x4F,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0x37,0x5C,0x36,0x5C,0x3E,0x55,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5B,0x37,0x5C,0x37,0x5C,0xC7,0x01,0x5C,0xCE,0x01,0x54};

// 11 左右扫风
// 开
// 关 
byte group_leftright_on[] = {0xFA,0x08,0xA7,0x04,0x5C,0xC6,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x5C,0x36,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x30,0x53,0x3F,0x53,0x3F,0x53,0x30,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xDF,0x13,0x4D,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x40,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0xA9,0x27,0xF3,0x08,0xB0,0x04,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x5B,0x38,0x53,0xCF,0x01,0x5B,0x37,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B,0x37,0x5B,0x37,0x5B,0xC8,0x01,0x5B,0x37,0x5B,0xD7,0x13,0x4D,0x3F,0x54,0x3F,0x53,0x3F,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x37,0x5B,0xC7,0x01,0x5B,0xC7,0x01,0x5B};
byte group_leftright_off[] = {0xF1,0x08,0xB1,0x04,0x52,0xD1,0x01,0x52,0x40,0x52,0x41,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0xDF,0x13,0x4C,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0xD0,0x01,0x52,0xD0,0x01,0x52,0xB1,0x27,0xF2,0x08,0xB1,0x04,0x52,0xD0,0x01,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0xD1,0x01,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x41,0x52,0xD1,0x01,0x52,0xD0,0x01,0x52,0xD0,0x01,0x52,0x40,0x52,0x40,0x52,0xD0,0x01,0x52,0x40,0x52,0xDF,0x13,0x4B,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x53,0x40,0x52,0x40,0x52,0x40,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x41,0x52,0x40,0x52,0x41,0x52,0x40,0x52,0xD0,0x01,0x52,0xD0,0x01,0x52};

// 12 风速
byte group_velocity[] = {0xF4,0x08,0xAD,0x04,0x56,0xCC,0x01,0x56,0x3C,0x56,0x3D,0x56,0xC5,0x01,0x5D,0xC5,0x01,0x5D,0x3D,0x56,0x3D,0x56,0x36,0x5D,0xCD,0x01,0x55,0x3D,0x55,0x3D,0x56,0xCD,0x01,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x55,0x3D,0x55,0x3D,0x56,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x3D,0x56,0xCD,0x01,0x55,0x3D,0x55,0x36,0x5D,0x3D,0x55,0x36,0x5D,0x3D,0x56,0x3D,0x55,0xCD,0x01,0x56,0x3D,0x56,0xC6,0x01,0x5D,0x3D,0x55,0x36,0x5D,0xCD,0x01,0x55,0x3D,0x56,0xDB,0x13,0x4F,0x3D,0x55,0x3D,0x55,0x36,0x5D,0x36,0x5D,0x3D,0x57,0x3B,0x55,0x3E,0x55,0x36,0x5D,0x3D,0x55,0x3E,0x55,0x3D,0x56,0x3D,0x56,0x3D,0x55,0xCE,0x01,0x55,0x3D,0x55,0x3E,0x55,0x36,0x5D,0x3E,0x55,0x36,0x5D,0x3D,0x56,0x3E,0x55,0x36,0x5D,0x3E,0x55,0x3D,0x56,0x3D,0x55,0x36,0x5D,0x36,0x5C,0x3D,0x55,0x36,0x5D,0xC6,0x01,0x5D,0xCD,0x01,0x55,0xCD,0x01,0x55,0xAC,0x27,0xF5,0x08,0xA6,0x04,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0xC6,0x01,0x5D,0xC6,0x01,0x5C,0xC6,0x01,0x5C,0x36,0x5C,0x36,0x5C,0xC7,0x01,0x5C,0x36,0x5C,0xD5,0x13,0x56,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5D,0xC6,0x01,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x36,0x5C,0x37,0x5C,0x37,0x5C,0x37,0x5C,0xC7,0x01,0x5C,0x36,0x5C,0xC7,0x01,0x5C,0xC6,0x01,0x5C};

// 13 静音
byte group_mute_on[] = {0xED,0x08,0xB5,0x04,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x58,0xCB,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD8,0x01,0x4B,0x44,0x4E,0xE4,0x13,0x52,0x3A,0x59,0x3A,0x59,0x3A,0x58,0x3A,0x4E,0x45,0x4E,0x45,0x58,0x3B,0x4E,0x44,0x58,0x3A,0x58,0x3B,0x4E,0x45,0x58,0x3B,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x58,0x3B,0x4E,0x45,0x58,0x3B,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xBB,0x27,0xED,0x08,0xB5,0x04,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0xE3,0x13,0x48,0x44,0x4E,0x44,0x52,0x40,0x52,0x40,0x4E,0x44,0x52,0x40,0x53,0x40,0x52,0xD0,0x01,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0x40,0x53,0xD0,0x01,0x53,0x3F,0x53};
byte group_mute_off[] = {0xF7,0x08,0xAB,0x04,0x59,0xCA,0x01,0x59,0x3A,0x58,0x3B,0x58,0xCA,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x58,0xCA,0x01,0x58,0x3A,0x58,0x3A,0x4E,0xD5,0x01,0x58,0x3A,0x4E,0x45,0x4E,0x45,0x58,0x3A,0x59,0x3A,0x58,0x3A,0x58,0x3B,0x59,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x59,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3A,0x59,0x3A,0x59,0xCA,0x01,0x58,0x3A,0x59,0xCA,0x01,0x59,0x3A,0x59,0x3A,0x59,0xCA,0x01,0x59,0x3A,0x58,0xDA,0x13,0x52,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0x3A,0x59,0xCA,0x01,0x59,0x3A,0x59,0x3A,0x58,0x3A,0x59,0x3A,0x58,0x3B,0x58,0x3A,0x58,0x3B,0x58,0x3B,0x58,0x3B,0x59,0x3A,0x58,0x3A,0x58,0x3A,0x58,0x3B,0x4E,0x45,0x58,0x3B,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xB5,0x27,0xEE,0x08,0xB5,0x04,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0xD4,0x01,0x4E,0x44,0x4E,0x44,0x4E,0xD5,0x01,0x4E,0x44,0x4E,0xE5,0x13,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x44,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0x45,0x4E,0xD5,0x01,0x4E,0xD4,0x01,0x4E};

// 14 灯光
byte group_light[] = {0xFC,0x08,0xA7,0x04,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x35,0x5D,0xC6,0x01,0x5D,0x36,0x5D,0x36,0x5D,0xC6,0x01,0x5D,0x35,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x5D,0x36,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x54,0xDF,0x13,0x4D,0x3F,0x53,0x3F,0x53,0x40,0x53,0x40,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5A,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0x38,0x5B,0xC8,0x01,0x5B,0xC8,0x01,0x5A,0xC8,0x01,0x5A,0xAA,0x27,0xF2,0x08,0xB1,0x04,0x53,0xCF,0x01,0x53,0x3F,0x53,0x40,0x53,0xD0,0x01,0x53,0x3F,0x53,0x40,0x53,0x40,0x53,0x3F,0x53,0xCF,0x01,0x53,0x3F,0x53,0x3F,0x53,0xD0,0x01,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x30,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x54,0xCF,0x01,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53,0x3F,0x54,0x3F,0x54,0xCF,0x01,0x53,0x3F,0x53,0xDF,0x13,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x54,0x3F,0x54,0x3F,0x53,0x3F,0x53,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x54,0x3F,0x54,0x3F,0x53,0x3F,0x54,0x3F,0x53,0x3F,0x53,0xCF,0x01,0x53,0xCF,0x01,0x53};








// 求校验和

byte getSum(byte* data, int len)
{
    byte sum = 0;
    printf("%d\n", len);

    for (int i = 0; i < len; i++)
    {
        sum += data[i];
        if (sum > 256)
        {
            sum -= 256;
        }
    }

    sum += 0xFF + 0x17;
    return sum;
}





byte WriteToStorageCmd(byte* dataField, int dataLen, byte group, uint8_t** cmdBuf)
{
    byte* offset = NULL;
    byte cs = 0x00;
    int cmdLen = 7 + dataLen; // 基础帧结构为6字节(不包括帧头和长度字段本身)
    int cmdLen1 =0, cmdLen2 = 0;
    if (cmdLen <= 255)
    {
        cmdLen1 = cmdLen;
        cmdLen2 = 0x00;
    }
    else if (cmdLen <= 255 * 2)
    {
        cmdLen1 = cmdLen - 255;
        cmdLen2 = 0x01;
    }
    else
    {
        printf("内码数据过大！\n");
    }
    // 动态分配内存
    *cmdBuf = (uint8_t*)malloc(cmdLen + 2); // 加上校验和和帧尾的2字节
    if (*cmdBuf == NULL) {
        return 0; // 内存分配失败
    }

    offset = *cmdBuf;

    // 帧头
    *offset++ = 0x68;
    // 帧长度
    *offset++ = (byte)cmdLen1;
    *offset++ = (byte)cmdLen2;

    // 模块地址
    *offset++ = 0xff;
    // 功能码
    *offset++ = 0x17;
    // 内码索引号
    *offset++ = group;

    // 数据域
    memcpy(offset, dataField, dataLen);
    offset += dataLen;
    cs = getSum(dataField, dataLen);
    *offset++ = cs;

    // 帧尾
    *offset++ = 0x16;

    return offset - *cmdBuf; // 返回实际写入的命令长度
}


byte IrSend(byte *data) 
{
  byte *offset = data, cs;
  //帧头
  *offset++ = 0x68;
  //帧长度
  *offset++ = 0x08;
  *offset++ = 0x00;
  //模块地址
  *offset++ = 0xff;
  //功能码，表示发送模式
  *offset++ = 0x12;
  //内码索引号，代表第几组
  *offset++ = 0x00;
  *offset++ = 0x11;
  *offset++ = 0x16;
  printf("offset - data：%d\n",offset - data);
  return offset - data; 
}

void IrSend_cmd()
{
    
    byte len = 8;
    byte data[] = {0x68,0x08,0x00,0xff,0x12,0x00,0x11,0x16};
    Ir_Serial.write(data, len);
    delay(5000);
    printf("---sending complete!-----\n");

}



/*
* 空调控制各个功能----------------------------------------------------------------------------------------------------------------
*/

void AC_on()
{
    uint8_t buf[512];
    int dataLen = sizeof(group_on) / sizeof(group_on[0]);
 
    uint8_t* cmdBuf = buf;

    byte len = WriteToStorageCmd(group_on, dataLen, 0x00, &cmdBuf);
    Ir_Serial.write(cmdBuf,len);
    if (len > 0) 
    {
        for (int i = 0; i < dataLen+8; ++i)
        {
            printf(" %02X ", cmdBuf[i]); // 使用%02X以十六进制格式打印每个字节
        }
        printf("Command length: %d\n", dataLen);
        free(cmdBuf); // 释放动态分配的内存
    }
    delay(500);

    IrSend_cmd();
    // printf("---sending complete!-----\n");
    delay(1000);
}

void AC_off()
{
    uint8_t buf[512];
    int dataLen = sizeof(group_off) / sizeof(group_off[0]);
 
    uint8_t* cmdBuf = buf;

    byte len = WriteToStorageCmd(group_off, dataLen, 0x00, &cmdBuf);
    Ir_Serial.write(cmdBuf,len);
    if (len > 0) 
    {
        for (int i = 0; i < dataLen+8; ++i)
        {
            printf(" %02X ", cmdBuf[i]); // 使用%02X以十六进制格式打印每个字节
        }
        printf("Command length: %d\n", dataLen);
        free(cmdBuf); // 释放动态分配的内存
    }
    delay(500);

    IrSend_cmd();
    // printf("---sending complete!-----\n");
    delay(3000);
}

void AC_cool()
{
    uint8_t buf[512];
    int dataLen = sizeof(group_cool) / sizeof(group_cool[0]);
 
    uint8_t* cmdBuf = buf;

    byte len = WriteToStorageCmd(group_cool, dataLen, 0x00, &cmdBuf);
    Ir_Serial.write(cmdBuf,len);
    if (len > 0) 
    {
        for (int i = 0; i < dataLen+8; ++i)
        {
            printf(" %02X ", cmdBuf[i]); // 使用%02X以十六进制格式打印每个字节
        }
        printf("Command length: %d\n", dataLen);
        free(cmdBuf); // 释放动态分配的内存
    }
    delay(500);

    IrSend_cmd();
    // printf("---sending complete!-----\n");
    delay(3000);

}

void AC_warm()
{
    uint8_t buf[512];
    int dataLen = sizeof(group_warm) / sizeof(group_warm[0]);
 
    uint8_t* cmdBuf = buf;

    byte len = WriteToStorageCmd(group_warm, dataLen, 0x00, &cmdBuf);
    Ir_Serial.write(cmdBuf,len);
    if (len > 0) 
    {
        for (int i = 0; i < dataLen+8; ++i)
        {
            printf(" %02X ", cmdBuf[i]); // 使用%02X以十六进制格式打印每个字节
        }
        printf("Command length: %d\n", dataLen);
        free(cmdBuf); // 释放动态分配的内存
    }
    delay(500);

    IrSend_cmd();
    // printf("---sending complete!-----\n");
    delay(3000);

}



void AC_updown_on()
{
    uint8_t buf[512];
    int dataLen = sizeof(group_updown_on) / sizeof(group_updown_on[0]);
 
    uint8_t* cmdBuf = buf;

    byte len = WriteToStorageCmd(group_updown_on, dataLen, 0x00, &cmdBuf);
    Ir_Serial.write(cmdBuf,len);
    if (len > 0) 
    {
        for (int i = 0; i < dataLen+8; ++i)
        {
            printf(" %02X ", cmdBuf[i]); // 使用%02X以十六进制格式打印每个字节
        }
        printf("Command length: %d\n", dataLen);
        free(cmdBuf); // 释放动态分配的内存
    }
    delay(500);

    IrSend_cmd();
    // printf("---sending complete!-----\n");
    delay(3000);
}






/*
* 红外控制命令------------------------------------------------------------------------------------------------------------------------
*/

void AC_onoff_cmd()
{
    if(AD_sta == AC_STA_OFF)
    {
        AC_on();
    }
    else
    {
        AC_off();
    }

}

